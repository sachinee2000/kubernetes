 <vpc creation started>

* first create one vpc security group with open all trafic in inbond and out bond roule.
* create vpc and create internet gateway attached internet gateway.
* create subnets in public then auto assingn public ip select everyone subnet go to actions edit subnet settings enable auto assign public ip.
* create routetable and do subnet assosiation and edit routes.
                                                                              <vpc creation is complited>


 <IAM ROLE creation started>

                                                                        (this both roles for creating a eks cluster)

* go to IAM console click roles,create roles,Select trusted entity{aws service},usecase {ec2},Add permissions{AmazonEC2ContainerRegistryReadOnly,AmazonEKS_CNI_Policy,AmazonEKSWorkerNodePolicy}then create role. create 2 roles in diffrent names one is cluster another one is nodegroup creation.
* go to IAM console click roles,create roles,Select trusted entity{aws service},usecase {EKS},select{EKS - Cluster or EKS - Auto Cluster},auto select AmazonEKSClusterPolicy, and add AmazonEKSVPCResourceController,then next then write role name then create role.                                                                              
                                                                     
                                                                        (this role is created for creating a nodegroup)

total creating 3 roles 2 rloes are eks another one is nodegroup


                                                                               <IAM ROLE creation complited>


2. Node IAM Role (Worker Node / Built-in Node Pool Role)

This role is assumed by the EC2 instances (or Fargate tasks) in your node pool.
Attached policies:

AmazonEKSWorkerNodePolicy – lets nodes join the cluster and communicate with the control plane.

AmazonEC2ContainerRegistryReadOnly – lets nodes pull images from Amazon ECR.

AmazonEKS_CNI_Policy – allows the CNI plugin to manage network interfaces.

----------------------------------------------------------------------------------------------------------------------------

3. Fargate Pod Execution Role (if using Fargate-based built-in node pools)

Attached policies:
AmazonEKSFargatePodExecutionRolePolicy
